// Generated by gencpp from file interaccion/multiplicador.msg
// DO NOT EDIT!


#ifndef INTERACCION_MESSAGE_MULTIPLICADOR_H
#define INTERACCION_MESSAGE_MULTIPLICADOR_H

#include <ros/service_traits.h>


#include <interaccion/multiplicadorRequest.h>
#include <interaccion/multiplicadorResponse.h>


namespace interaccion
{

struct multiplicador
{

typedef multiplicadorRequest Request;
typedef multiplicadorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct multiplicador
} // namespace interaccion


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::interaccion::multiplicador > {
  static const char* value()
  {
    return "d1d48bd1a6a0e98317f90b1d6ea7b6fa";
  }

  static const char* value(const ::interaccion::multiplicador&) { return value(); }
};

template<>
struct DataType< ::interaccion::multiplicador > {
  static const char* value()
  {
    return "interaccion/multiplicador";
  }

  static const char* value(const ::interaccion::multiplicador&) { return value(); }
};


// service_traits::MD5Sum< ::interaccion::multiplicadorRequest> should match 
// service_traits::MD5Sum< ::interaccion::multiplicador > 
template<>
struct MD5Sum< ::interaccion::multiplicadorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::interaccion::multiplicador >::value();
  }
  static const char* value(const ::interaccion::multiplicadorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::interaccion::multiplicadorRequest> should match 
// service_traits::DataType< ::interaccion::multiplicador > 
template<>
struct DataType< ::interaccion::multiplicadorRequest>
{
  static const char* value()
  {
    return DataType< ::interaccion::multiplicador >::value();
  }
  static const char* value(const ::interaccion::multiplicadorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::interaccion::multiplicadorResponse> should match 
// service_traits::MD5Sum< ::interaccion::multiplicador > 
template<>
struct MD5Sum< ::interaccion::multiplicadorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::interaccion::multiplicador >::value();
  }
  static const char* value(const ::interaccion::multiplicadorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::interaccion::multiplicadorResponse> should match 
// service_traits::DataType< ::interaccion::multiplicador > 
template<>
struct DataType< ::interaccion::multiplicadorResponse>
{
  static const char* value()
  {
    return DataType< ::interaccion::multiplicador >::value();
  }
  static const char* value(const ::interaccion::multiplicadorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // INTERACCION_MESSAGE_MULTIPLICADOR_H
